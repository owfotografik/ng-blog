{"version":3,"sources":["/Users/omaste/GitHub/ng-blog/src/$_lazy_route_resource lazy","/Users/omaste/GitHub/ng-blog/src/app/app.component.css","/Users/omaste/GitHub/ng-blog/src/app/app.component.html","/Users/omaste/GitHub/ng-blog/src/app/app.component.ts","/Users/omaste/GitHub/ng-blog/src/app/app.module.ts","/Users/omaste/GitHub/ng-blog/src/app/components/home/home.component.html","/Users/omaste/GitHub/ng-blog/src/app/components/home/home.component.ts","/Users/omaste/GitHub/ng-blog/src/app/components/post/post.component.html","/Users/omaste/GitHub/ng-blog/src/app/components/post/post.component.ts","/Users/omaste/GitHub/ng-blog/src/app/components/posteditor/posteditor.component.html","/Users/omaste/GitHub/ng-blog/src/app/components/posteditor/posteditor.component.ts","/Users/omaste/GitHub/ng-blog/src/app/services/blog.service.ts","/Users/omaste/GitHub/ng-blog/src/environments/environment.ts","/Users/omaste/GitHub/ng-blog/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/GitHub/ng-blog/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/GitHub/ng-blog/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n<<<<<<< HEAD\\n  <div><a routerLink=\\\"post/new/edit\\\">Create a new post</a></div>\\n=======\\n  <div>\\n    <a routerLink=\\\"/post/new/edit\\\">Create a new Post</a>\\n  </div>\\n>>>>>>> 11dd73f7a28775edbf12a55db6a66370b5a2fc79\\n  <router-outlet></router-outlet>\\n  <div>FOOTER HERE</div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/GitHub/ng-blog/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Hello from angular';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PostComponent } from './components/post/post.component';\nimport { PosteditorComponent } from './components/posteditor/posteditor.component'\n\nlet myRoutes: Routes = [{\n  path: '', component: HomeComponent, pathMatch: 'full'\n}, {\n  path: 'post/:id', component: PostComponent, pathMatch: 'full'\n},{\n  path: 'post/:id/edit', component: PosteditorComponent\n}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PostComponent,\n    PosteditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(\n      myRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    )\n  ],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/app/app.module.ts","module.exports = \"<div>\\n    \\n    <div class=\\\"posts\\\">\\n        <div class=\\\"post\\\" *ngFor=\\\"let post of posts\\\">\\n            <h3>{{post.title}}</h3>\\n            <p>by - {{post.author.name}}</p>\\n            <a [routerLink]=\\\"['/post', post.id]\\\">READ MORE</a>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/GitHub/ng-blog/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { getPosts } from '../../services/blog.service'\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html'\n})\n\nexport class HomeComponent {\n  posts = getPosts()\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/app/components/home/home.component.ts","module.exports = \"<div>\\n    <a routerLink=\\\"\\\">GO BACK</a>\\n    <div>\\n        <h3>{{post.title}}</h3>\\n        <p>{{post.body}}</p>\\n        <p><img src=\\\"{{post.author.imgUrl}}\\\" alt=\\\"\\\"> {{post.author.name}}</p>\\n        <a routerLink=\\\"/post/{{post.id}}/edit\\\">edit</a>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/GitHub/ng-blog/src/app/components/post/post.component.html\n// module id = ../../../../../src/app/components/post/post.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { getPostByPostId } from '../../services/blog.service'\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'post',\n    templateUrl: './post.component.html'\n})\n\nexport class PostComponent {\n    post: {}\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router\n    ) {\n        //debugger\n        var id = this.route.snapshot.paramMap.get('id')\n        this.post = getPostByPostId(id);\n    }\n   \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/app/components/post/post.component.ts","module.exports = \"<div>\\n    <a routerLink=\\\"\\\">GO BACK</a>\\n    <div>\\n    <div>\\n      {{post.title}}\\n    </div>\\n        <form>\\n          <div class=\\\"form\\\">\\n            <label>Title</label>\\n            <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"post.title\\\">\\n          </div>\\n          <div class=\\\"form\\\">\\n            <label>Body</label>\\n            <textarea name=\\\"body\\\" [(ngModel)]=\\\"post.body\\\"></textarea>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"save()\\\">Save</button>\\n      \\n        </form>\\n      </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/omaste/GitHub/ng-blog/src/app/components/posteditor/posteditor.component.html\n// module id = ../../../../../src/app/components/posteditor/posteditor.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { getPostByPostId } from '../../services/blog.service'\nimport { updatePost } from '../../services/blog.service'\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'posteditor',\n    templateUrl: './posteditor.component.html'\n})\n\nexport class PosteditorComponent {\n    post: {}\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router\n    ) {\n        //debugger\n        var id = this.route.snapshot.paramMap.get('id')\n        this.post = getPostByPostId(id);\n    }\n    save() {\n        updatePost(this.post);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/app/components/posteditor/posteditor.component.ts","class Author {\n    name: string;\n    email: string;\n    imgUrl: string;\n}\n\nclass Post {\n    id: string;\n    title: string;\n    body: string;\n    author: Author;\n    constructor() {\n        this.id = posts.length.toString()\n    }\n}\n\nlet posts: [Post] = getPostsFromStorage()\n\nfunction getPostsFromStorage() {\n    return JSON.parse(localStorage.getItem('posts')) || []\n}\n\n\nfunction getPosts() {\n    return posts\n}\n\nfunction savePosts() {\n    localStorage.setItem('posts', JSON.stringify(posts));\n}\n\nfunction getPostByPostId(postId: string): Post {\n\n    for (var i = 0; i < posts.length; i++) {\n        var post = posts[i]\n        if (post.id == postId) {\n            return post\n        }\n    }\n\n    return new Post()\n}\n\nfunction updatePost(post) {\n    var p = posts.find(x => x.id == post.id)\n    if (p) {\n        p.body = post.body\n        p.title = post.title\n    } else {\n        post.author = { name: 'Jake', email: 'j@j.com', imgUrl: '//placehold.it/80x80' }\n        posts.push(post)\n    }\n    savePosts()\n}\n\n\nexport {\n    getPosts,\n    getPostByPostId,\n    updatePost\n}\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/app/services/blog.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/omaste/GitHub/ng-blog/src/main.ts"],"sourceRoot":"webpack:///"}